<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">
    <flow name="getFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="airline" value="#[message.inboundProperties.'http.query.params'.airline]" doc:name="Set airline variable"/>
        <flow-ref name="setCodeSubflow" doc:name="setCodeSubflow"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.airline == &quot;delta&quot;]">
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
            </when>
            <when expression="#[flowVars.airline == &quot;united&quot;]">
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
            </when>
            <when expression="#[flowVars.airline == &quot;american&quot;]">
                <flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
            </when>
            <otherwise>
                <flow-ref name="getAllAirlineFlightsFlow" doc:name=" getAllAirlineFlightsFlow"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload orderBy $.price]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
        
    </flow>
    <sub-flow name="setCodeSubflow">
        <set-variable variableName="code" value="#[(message.inboundProperties.'http.query.params'.code == empty) ? 'SFO' : message.inboundProperties.'http.query.params'.code]" doc:name="Set airport code variable"/>
    </sub-flow>
    <flow name="getUnitedFlightsFlow">
        <http:request config-ref="United_REST_Request_Configuration" path="/essentials/united/flights/{destination}" method="GET" doc:name="United REST Request" metadata:id="9be90bca-dc68-4b73-ac58-bf743dbc653a">
            <http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.code]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message" metadata:id="d9fe6bfd-88a7-466d-a08c-deb41b4a54f6">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload.flights map ((flight , indexOfFlight) -> {
	airline: flight.airlineName,
	flightCode: flight.code,
	fromAirportCode: flight.origin,
	toAirportCode: flight.destination,
	departureDate: flight.departureDate,
	emptySeats: flight.emptySeats,
	price: flight.price,
	planeType: flight.planeType
})]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getAmericanFlightsFlow">
        <http:request config-ref="American_HTTP_Request_Configuration" path="/flights" method="GET" doc:name="American REST Request">
            <http:request-builder>
                <http:query-param paramName="code" value="#[flowVars.code]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message" metadata:id="61323bc2-09be-471d-8837-a0ad34eca713">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	airline: "American",
	flightCode: payload01.code,
	fromAirportCode: payload01.origin,
	toAirportCode: payload01.destination,
	departureDate: payload01.departureDate,
	emptySeats: payload01.emptySeats,
	totalSeats: payload01.plane.totalSeats,
	price: payload01.price,
	planeType: payload01.plane.type
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="getDeltaFlightsFlow">
        <dw:transform-message doc:name="Pass code">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.code as :string
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Delta_Web_Service_Consumer" operation="findFlight" doc:name="Delta SOAP Request"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="6597d65a-8cf1-406e-8741-f8eb4f46411e">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
	airline: return.airlineName,
	flightCode: return.code,
	fromAirportCode: return.origin,
	toAirportCode: return.destination,
	departureDate: return.departureDate,
	emptySeats: return.emptySeats,
	price: return.price,
	planeType: return.planeType
})]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getAllAirlineFlightsFlow">
        <scatter-gather doc:name="Scatter-Gather">
            <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
            <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
            <flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
        </scatter-gather>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flatten payload]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="postFlightFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="POST" doc:name="HTTP" metadata:id="1602cdfa-1d4e-439f-9dc4-09c1834a40e2"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="C:\Users\anindygh\Desktop\anindya\Cloud(MuleSoft)\MUFundamentals3.9_studentFiles_07mar2018\examples\flight-example.json"/>
            <dw:set-payload resource="classpath:json_flight_playground.dwl"/>
            <dw:set-variable variableName="xml"><![CDATA[%dw 1.0
%output application/xml
---
data: {
		hub: "MUA",
		flight @(airline: payload.airline): {
			code: payload.toAirportCode
			}
		
		}]]></dw:set-variable>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="postMultipleFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/multipleflights" allowedMethods="POST" doc:name="HTTP" metadata:id="b7b7bf14-286f-439a-9de5-146fd0f75774"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="6f783f43-5407-4b88-83e9-dad7a89c5079">
            <dw:input-payload doc:sample="C:\Users\anindygh\Desktop\anindya\Cloud(MuleSoft)\MUFundamentals3.9_studentFiles_07mar2018\examples\flights-example.xml" mimeType="application/xml"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://soap.training.mulesoft.com/
%type currency = :string {format: "###.00"}
%type flight = :object {class: "com.mulesoft.training.Flight"}
---
flights: payload.ns0#listAllFlightsResponse.*return map {
	
		destination: $.destination,
		price: $.price as :number as :currency,
		planeType: upper ($.planeType replace /(Boing)/ with "Boeing"),
		departureDate: $.departureDate as :date {format: "yyyy/MM/dd"} as :string {format: "MMM dd, yyyy"},
		availableSeats: $.emptySeats as :number,
		//totalSeats: getNumSeats($.planeType)	
		totalSeats: lookup("getTotalSeatsFlow",{type: $.planeType})
	} orderBy $.departureDate orderBy $.price distinctBy $
filter ($.availableSeats !=0) ]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getTotalSeatsFlow">
        <expression-component doc:name="Expression"><![CDATA[if (payload.type.contains('737')){
 					payload = 150;
					} else {
 				payload = 300;
					}
				]]></expression-component>
    </flow>
</mule>
